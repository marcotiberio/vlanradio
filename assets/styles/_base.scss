/**
* 0.0 Root
*
* Top level styles every element should inherit.
*/

@include font-face('UniversLT', 'UniversLT67BoldCondensed');

html {
  background-color: $color-background;
  box-sizing: border-box;
  color: $color-text;
  font-family: 'UniversLT', Helvetica, Arial, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  height: 100%;
  line-height: 1.2;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-wrap: break-word;
  scroll-behavior: smooth;
  word-wrap: break-word;


  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }
}

body {
  height: 100%;
  overflow-x: hidden;
}

/**
* 1.0 Typography
*
* Styling all likely used content flow elements.
*/

#{$heading-selectors} {
  color: $color-headline;
  line-height: 1.45;
  margin-bottom: 0.9rem;
  margin-top: 0;

  a,
  a:hover,
  a:focus {
    color: $color-headline;
    text-decoration: underline;
  }

  a:hover,
  a:focus {
    text-decoration: none;
  }
}

h1,
.h1 {
  color: $green;
  font-size: 72px;
  line-height: 1;
  margin-bottom: 1.5rem;
  padding-top: 2rem;
  text-transform: uppercase;

  @media (min-width: $breakpoint-tablet-horizontal) {
    font-size: 210px;
  }
}

h2,
.h2 {
  font-size: 1.5rem;
  line-height: 1.25;
  padding-top: 1rem;
  text-transform: uppercase;

  @media (min-width: $breakpoint-tablet-horizontal) {
    font-size: 2.5rem;
  }
}

h3,
.h3 {
  font-size: 1.125rem;
  padding-top: 1rem;
  text-transform: uppercase;

  @media (min-width: $breakpoint-tablet-horizontal) {
    font-size: 1.25rem;
  }
}

h4,
.h4 {
  font-size: 1rem;
  padding-top: 0.5rem;
  text-transform: uppercase;

  @media (min-width: $breakpoint-tablet-horizontal) {
    font-size: 1.125rem;
  }
}

h5,
.h5 {
  font-size: 1rem;
  font-weight: 400;
  padding-top: 0.5rem;
  text-transform: uppercase;
}

h6,
.h6 {
  font-size: 1rem;
  padding-top: 0.5rem;
  text-transform: uppercase;
}

a {
  color: $green;
  font-size: 17px;
  text-decoration: none;
  transition: color 0.2s ease-out;

  @media (min-width: $breakpoint-tablet-horizontal) {
    font-size: 20px;
  }

  &:hover,
  &:focus {
    text-decoration: underline;
  }
}

p,
.paragraph,
table,
figure,
span {
  color: $green;
  font-size: 17px;
  margin: 0;
  text-transform: none;

  @media (min-width: $breakpoint-tablet-horizontal) {
    font-size: 20px;
  }

  a {
    text-decoration: underline;

    &:hover,
    &:focus {
      text-decoration: none;
    }
  }
}

hr {
  background-color: $green;
  border: 0;
  display: block;
  height: 1px;
  margin-bottom: 0;
  margin-left: $container-padding;
  margin-right: $container-padding;
  margin-top: $container-padding * 2;
}

img {
  display: block;
  max-width: 100%;
  width: 100%;
}

figcaption {
  font-size: 0.95rem;
  margin-top: 0.625rem;
  text-transform: uppercase;
}

code {
  background-color: rgba(0, 0, 0, 0.05);
  display: inline-block;
  padding: 0 0.3rem;
}

blockquote,
.blockquote {
  border-left: 4px solid $color-accent;
  font-size: 1.125rem;
  font-style: italic;
  font-weight: 400;
  letter-spacing: 0.16px;
  line-height: 1.55;
  margin: 2.4rem auto;
  max-width: 28rem;
  padding: 0.8rem 1.5rem;

  p:last-child {
    margin-bottom: 0;
  }
}

/**
* 1.1 Lists & Tables
*
* Default and custom styled list and table elements.
*/

ul,
ol {
  margin: 0 0 1.2rem;
  padding-left: 1.5rem;
  text-transform: uppercase;

  ul,
  ol {
    margin-bottom: 0;
  }
}

/* Icon Lists */

.iconList {
  list-style: none;
  padding: 0;

  li {
    margin-bottom: 0.5rem;
    padding-left: 1.5rem;
    position: relative;
    text-transform: uppercase;

    &::before {
      background-size: contain;
      content: '';
      display: block;
      height: 1rem;
      left: 0;
      position: absolute;
      top: 0.25rem;
      width: 1rem;
    }
  }

  &--checkCircle {
    li::before {
      background-image: url('../assets/icons/check-circle.svg');
    }
  }
}

/* Tables */

table {
  border-collapse: collapse;
  border-spacing: 0;
  max-width: 100%;
}

td,
th {
  padding: 1.25rem;
  text-align: inherit;
  vertical-align: top;
}

thead {
  th {
    border-bottom: 2px solid $color-accent;
    color: $color-headline;
    padding-bottom: 10px;
    vertical-align: bottom;
    white-space: nowrap;
  }
}

tr:nth-child(even) {
  background-color: $color-background-light;
}

/**
* 1.2 Buttons
*
* Global button elements, including reset on standard button element.
*/

button {
  appearance: none;
  background-color: transparent;
  border: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  padding: 0;
  text-align: inherit;
}

.button {
  appearance: none;
  background-color: $color-accent;
  border: 1px solid $color-accent;
  border-radius: 4px;
  color: $color-background;
  cursor: pointer;
  display: inline-block;
  font-family: inherit;
  font-size: 0.875rem;
  line-height: inherit;
  padding: 1rem 1.5rem;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
  user-select: none;

  &:disabled,
  &--disabled {
    cursor: default;
    opacity: 0.65;
    pointer-events: none;
  }

  &:hover,
  &:focus {
    background-color: $color-background-dark;
    border-color: $color-background-dark;
    color: $color-background;
  }

  &--ghost {
    background-color: transparent;
    border-color: $color-accent;
    color: $color-accent;

    &:hover,
    &:focus {
      background-color: transparent;
      border-color: $color-background-dark;
      color: $color-background-dark;
    }
  }

  &--small {
    font-size: 0.8rem;
    padding: 0.5rem 1rem;
  }

  &--link {
    background-color: transparent;
    border: 0;
    color: $color-accent;
    padding: 0;
    position: relative;
    text-align: left;
    transition: color 0.2s ease-out;

    &:hover,
    &:focus {
      background-color: transparent;
      color: $color-background-dark;

      &::before {
        background-color: $color-background-dark;
      }

      &::after {
        background-position: right center;
      }
    }

    &::before {
      background-color: $color-accent;
      bottom: 0;
      content: '';
      height: 1px;
      left: 0;
      position: absolute;
      transition: background-color 0.2s ease-out;
      width: 100%;
    }

    &::after {
      $color-accent-rgb: red($color-accent), green($color-accent), blue($color-accent);
      $color-background-dark-rgb: red($color-background-dark), green($color-background-dark), blue($color-background-dark);

      background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='16' height='10' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M3.586 5L.293 8.293a1 1 0 1 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4A1 1 0 1 0 .293 1.707L3.586 5z' fill='rgb(#{$color-accent-rgb})'/%3E%3Cpath d='M13.586 5l-3.293 3.293a1 1 0 0 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4a1 1 0 0 0-1.414 1.414L13.586 5z' fill='rgb(#{$color-background-dark-rgb})'/%3E%3C/svg%3E");
      background-position: left center;
      background-repeat: no-repeat;
      content: '';
      display: inline-block;
      height: 10px;
      margin-left: 10px;
      transition: background-position 0.2s ease-out;
      vertical-align: baseline;
      width: 6px;
    }
  }
}

/* Pills */

.pill {
  border: 1px solid $green;
  border-radius: 1rem;
  color: $green;
  display: inline-block;
  font-size: 20px;
  max-width: 100%;
  overflow: hidden;
  padding: 0.125rem 0.5rem;
  text-decoration: none;
  text-overflow: ellipsis;
  vertical-align: middle;
  white-space: nowrap;

  &:hover,
  &:focus {
    color: $color-background;
  }
}

/* Icons */

.feather {
  color: $color-accent;
  position: relative;
  top: -2px;
  vertical-align: middle;
}

/**
* 1.3 Forms
*
* Global form elements, including structering wrapper elements.
*/

form {
  margin: 0;
}

fieldset {
  border: 0;
  margin: 0 0 1.5rem;
  padding: 0;

  *:last-child {
    margin-bottom: 0;
  }

  input,
  select,
  textarea {
    margin: 0 0 1.875rem;
  }
}

legend {
  display: inline-block;
  font-size: 1.25rem;
  margin-bottom: 0.9375rem;
}

label {
  display: inline-block;
  font-weight: 700;
  line-height: 1.5;
  margin-bottom: 0.5rem;
}

#{$input-selectors} {
  appearance: none;
  background-color: $color-background;
  border: 1px solid rgba(11, 16, 12, 1);
  border-radius: 0;
  color: $color-headline;
  font-family: inherit;
  font-size: inherit;
  min-height: 50px;
}

input,
select,
textarea {
  margin: 0 0 1rem;
  padding: 10px 20px;
}

textarea {
  min-height: 150px;
  padding: 20px;
  resize: vertical;
  width: 100%;
}

select {
  $color-text-rgb: red($color-contrast), green($color-contrast),
    blue($color-contrast);

  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='32' height='32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpolyline fill='none' stroke='rgb(#{$color-text-rgb})' stroke-width='5'  points='2,9 16,25 30,9 '/%3E%3C/svg%3E");
  background-position: calc(100% - 18px) center;
  background-repeat: no-repeat;
  background-size: 9px;
  line-height: 1.75;
  padding-right: 45px;

  &::-ms-expand {
    display: none;
  }
}

[type='checkbox'],
[type='radio'] {
  opacity: 0;
  pointer-events: none;
  position: absolute;
  width: 1px;

  &,
  &:hover,
  &:focus {
    border-color: $color-border;
    outline: 0;
  }

  +label {
    display: inline-block;
    padding-left: 1.875rem;
    position: relative;
    width: 100%;

    &::before {
      background-color: #fff;
      border: 1px solid $color-border;
      border-radius: 2px;
      content: '';
      display: block;
      height: 15px;
      left: 0;
      margin: 0;
      padding: 0;
      position: absolute;
      top: 4px;
      transition: border-color 0.2s ease, background-color 0.2s ease;
      width: 15px;
    }
  }

  &:checked {
    +label::before {
      background-color: $color-accent;
      border-color: $color-accent;
      box-shadow: inset 0 0 0 2px #fff;
    }
  }
}

[type='radio'] {
  +label::before {
    border-radius: 50%;
  }
}

iframe {
  width: 100%;
}

/**
* 2.0 Helpers
*
* Global layout classes for a consistent appearance.
*/

.pageWrapper {
  display: flex;
  flex-direction: column;
  height: 100%;

  .admin-bar & {
    padding-top: 46px;

    @media (min-width: 782px) {
      padding-top: 32px;
    }
  }
}

.mainContent {
  flex: 1 0 auto;
  margin: 0 $container-padding;

  @media (max-width: $breakpoint-mobile-horizontal) {
    margin: 0 $container-padding-mobile;
  }
}

.flyntComponent {
  position: relative;
}

.componentSpacing {
  margin: $component-spacing-mobile 0;

  @media (min-width: $breakpoint-tablet) {
    margin: $component-spacing-tablet 0;
  }

  @media (min-width: $breakpoint-desktop) {
    margin: $component-spacing-desktop 0;
  }

  &[class*='theme'] {
    margin: 0;
    padding: $component-spacing-mobile 0;

    @media (min-width: $breakpoint-tablet) {
      padding: $component-spacing-tablet 0;
    }

    @media (min-width: $breakpoint-desktop) {
      padding: $component-spacing-desktop 0;
    }
  }
}

.container-outer {
  .fullWidthContainer {
    padding: 0;
  }

}

.centerMaxWidthContainer {
  @include center;

  @media (min-width: $breakpoint-tablet) {
    @include center($padding: $container-padding);
  }

  @media (min-width: $breakpoint-desktop) {
    @include center($padding: $container-padding);
  }
}

.narrowWidthContainer {
  margin-left: auto;
  margin-right: auto;
  max-width: 100%;
  padding: 0;
  
  @media (min-width: $breakpoint-tablet-horizontal) {
    margin-left: 0;
    margin-right: 0;
    max-width: 100%;
    padding: 0;

    .episode-header,
    .episode-header-labels {
      margin-left: 25vw;
      max-width: 75vw;
    }
    
    .flyntComponent {
      margin-left: 25vw;
      max-width: 75vw;

      &:last-child {
        margin-left: 0;
        max-width: 100%;
      }
    }
  }
}

.fullWidthContainer {
  max-width: 100%;
  padding: 0;
}

.post {
  .fullWidthContainer {
    max-width: 100%;
    padding: 0;
  }
}

.centerContentMaxWidth {
  margin: 0 auto;
  max-width: $content-max-width;
}

.preContent {
  @include reset-content-margins;
  margin: 0 auto 32px;
  max-width: $content-max-width;
  text-align: center;

  @media (min-width: $breakpoint-tablet) {
    margin-bottom: $container-padding-tablet;
  }

  @media (min-width: $breakpoint-desktop) {
    margin-bottom: $container-padding-desktop;
  }
}

.postContent {
  @include reset-content-margins;
  margin: 32px auto 0;
  max-width: $content-max-width;
  text-align: center;

  @media (min-width: $breakpoint-tablet) {
    margin-top: $container-padding-tablet;
  }

  @media (min-width: $breakpoint-desktop) {
    margin-top: $container-padding-desktop;
  }
}

.scrollableTableWrapper {
  -webkit-overflow-scrolling: touch;
  overflow-x: auto;
}

/* Class for text that should only be visible to screen readers */

.visuallyHidden {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px !important;
  overflow: hidden;
  position: absolute !important;
  white-space: nowrap;
  width: 1px !important;
}

/* Box Helpers */

.noPadding {
  padding: 0;
}

.boxPadding {
  @include reset-content-margins;
  padding: 20px;

  @media (min-width: $breakpoint-tablet-horizontal) {
    padding: 20px;
  }
}

.boxPaddingTopBottom {
  @include reset-content-margins;
  padding: 20px 0;
}

.boxPaddingSides {
  @include reset-content-margins;
  padding: 0 20px;
}

.boxShadow {
  box-shadow: 0 1px 26px 0 rgba(0, 0, 0, 0.06);
}

/* Custom styling for child page layouts */

.page-child {
  .mainContent {
    hr {
      transform: translateX(calc(-25% + 10px));
      width: calc(100vw - 40px);

      @media (max-width: $breakpoint-mobile-horizontal) {
        transform: translateX(-20px);
        width: 100%;
      }
    }

    .fullWidthContainer {
      padding: 0;
    }

    .centerMaxWidthContainer {
      @media (max-width: $breakpoint-mobile-horizontal) {
        padding: 0;
      }
    }

    .flyntComponent {
      margin-left: auto;
      margin-right: $container-padding;
      max-width: 75%;
      padding: 0;

      @media (max-width: $breakpoint-tablet-horizontal) {
        margin-left: 0;
        margin-right: 0;
        max-width: 100%;
        padding: 0;
      }

      &:last-child {
        border-top: 1px solid $green;
        max-width: 100%;
      }
    }

    .post-content {
      .flyntComponent {
        margin: $container-padding 0;
        max-width: 100%;
        padding: 0;
      }
    }

    .flyntComponent--flynt-block-episode-select {
      .content-image,
      .content-inner-title,
      .allPostsLink {
        display: none;
      }
    }
  }
}

/* Custom styling for child page layouts */

.single-artist {
  .post {
    padding: 0;

    .post-header {
      margin-left: auto;
      margin-right: 0;
      max-width: 100%;
      padding: 0;

      @media (max-width: $breakpoint-tablet-horizontal) {
        margin-left: 0;
        margin-right: 0;
        max-width: 100%;
        padding: 0;
      }
  
      hr {
        transform: translateX(calc(-25% + 10px));
        width: calc(100vw - 40px);
  
        @media (max-width: $breakpoint-mobile-horizontal) {
          transform: translateX(-20px);
          width: 100%;
        }
      }
  
      .fullWidthContainer {
        padding: 0;
      }
  
      .centerMaxWidthContainer {
        padding: 0;
  
        @media (max-width: $breakpoint-mobile-horizontal) {
          padding: 0;
        }
      }
  
      .flyntComponent {
        &:last-child {
          max-width: 100%;
        }
      }
    }
  
    .post-main {
      .fullWidthContainer {
        padding: 0;
      }
  
      .centerMaxWidthContainer {
        padding: 0;
  
        @media (max-width: $breakpoint-mobile-horizontal) {
          padding: 0;
        }
      }
    }

    .post-related {
      .preContent {
        display: none;
      }
    }
  }  
}



/* Custom styling for single post layouts */

.post {
  &-main {
    >.componentSpacing {
      &:first-child {
        margin-bottom: $component-spacing;
        margin-top: 0;
      }

      &:last-child {
        margin-bottom: $component-spacing;
        margin-top: $container-padding * 2;
        max-width: 100%;
      }
    }

    .fullWidthContainer {
      margin-left: 0;
    }

    p,
    .tags,
    a {
      color: $green;
    }

    .meta-category {
      color: $green;
      font-size: 20px;
      text-decoration: none;
    }

    .episode-header-labels {
      border-bottom: 1px solid $green;
      column-gap: $container-padding;
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      margin-bottom: $container-padding;
      padding: $container-padding 0;

      p {
        opacity: 0.5;
        text-transform: uppercase;
      }
    }

    .episode-header {
      column-gap: $container-padding;
      display: grid;
      grid-template-columns: repeat(4, 1fr);

      @media (max-width: $breakpoint-mobile-horizontal) {
        column-gap: 0;
        grid-auto-rows: auto;
        grid-template-columns: repeat(2, 1fr);
        text-transform: uppercase;

        &-labels {
          display: none;
        }
      }

      .table-header {
        @media (max-width: $breakpoint-mobile-horizontal) {
          padding: $container-padding-mobile 0;
        }
        
        &-label {
          display: none;

          @media (max-width: $breakpoint-mobile-horizontal) {
            border-bottom: 1px solid $green;
            display: block;
            margin-bottom: $container-padding / 2;
            opacity: 0.5;
            padding-bottom: $container-padding / 2;
            text-transform: uppercase;
          }
        }

        p,
        span {
          text-transform: uppercase;
        }

        a {
          text-decoration: none;
        }
      }

      &-title {
        color: $green;
        text-transform: uppercase;
        width: fit-content;
      }

      .tags {
        // @include reset-list;
        display: flex;
        flex-flow: row wrap;
        gap: $container-padding;
        padding-left: 0;

        @media (max-width: $breakpoint-mobile-horizontal) {
          flex-flow: column wrap;
          gap: 0;
        }

        &-item {
          display: inline-block;

          &Link {
            color: $green;
            text-decoration: none;
          }
        }
      }
    }

    .excerpt {
      color: $green;
      font-weight: normal;
    }
  }

  &-related {
    border-top: 1px solid $green;

    h1 {
      margin-left: -12px;
      padding-top: 0;
      text-align: left;

      @media (max-width: $breakpoint-tablet-horizontal) {
        margin-left: 0;
        margin-top: $container-padding / 2;
      }
    }
  }
}

/* Custom styling for page Shows */

.page-shows-archive {
  .flyntComponent--flynt-block-show-grid {
    display: grid;
    grid-template-columns: 25% 75%;

    @media (max-width: $breakpoint-mobile-horizontal) {
      display: flex;
      flex-flow: column wrap;
    }

    .preContent {
      text-align: left;
      width: 100%;
    }

    .grid {
      column-gap: 20px;
      display: flex;
      flex-flow: column wrap;
      height: 100%;
      list-style: none;
      margin: 0;
      padding: 0 0 20px;
    }

    .grid-item:hover .figure-image {
      filter: grayscale(0) contrast(1) blur(0);
      mix-blend-mode: initial;
    }

    .figure {
      background-color: $green;
      display: flex;
      flex: 1 1 100%;
      height: 100%;
      overflow: hidden;
      padding: 0;
      position: relative;
      

      &-image {
        filter: grayscale(100%) contrast(1) blur(0);
        flex: 1 0 100%;
        height: 600px;
        mix-blend-mode: multiply;
        object-fit: cover;
        opacity: 1;
        position: relative;
      }

      &::before {
        background-color: $black;
        bottom: 0;
        content: '';
        height: 100%;
        left: 0;
        mix-blend-mode: lighten;
        position: absolute;
        right: 0;
        top: 0;
        width: 100%;
        z-index: 1;
      }

      @media (max-width: $breakpoint-tablet-horizontal) {
        height: 300px;
      }
    }
  }
}

/* Custom styling for tag page layouts */

.archive {
  .screen-reader-text {
    display: none;
  }
}

/* Skip link behaviour */

.skipLink {
  position: fixed;
  top: -100px;
  z-index: 999;

  &:focus {
    top: 0;
  }
}

/**
* 3.0 Themes
*
* Color themes for backgrounds and content elements.
*/

.themeLight {
  background-color: $color-background-light;
}

.themeDark {
  background-color: $color-background-dark;

  &,
  #{$heading-selectors} {
    color: $color-background;
  }

  .button {
    &:hover,
    &:focus {
      background-color: $color-background-hero;
      border-color: $color-background-hero;
      color: $color-background;
    }

    &--ghost {
      &:hover,
      &:focus {
        background-color: transparent;
        border-color: $color-background-hero;
        color: $color-background-hero;
      }
    }

    &--link {
      &:hover,
      &:focus {
        background-color: transparent;

        &::before {
          background-color: $color-background;
        }
      }

      &::after {
        $color-accent-rgb: red($color-accent), green($color-accent), blue($color-accent);
        $color-background-rgb: red($color-background), green($color-background), blue($color-background);

        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='16' height='10' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M3.586 5L.293 8.293a1 1 0 1 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4A1 1 0 1 0 .293 1.707L3.586 5z' fill='rgb(#{$color-accent-rgb})'/%3E%3Cpath d='M13.586 5l-3.293 3.293a1 1 0 0 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4a1 1 0 0 0-1.414 1.414L13.586 5z' fill='rgb(#{$color-background-rgb})'/%3E%3C/svg%3E");
      }
    }
  }
}

.themeHero {
  background-color: $color-background-hero;

  &,
  #{$heading-selectors},
  a,
  .feather {
    color: $color-background;
  }

  a:hover,
  a:focus {
    color: $color-background-dark;
  }

  .button {
    background-color: $color-background-dark;
    border-color: $color-background-dark;
    color: $color-background;

    &:hover,
    &:focus {
      background-color: $color-background;
      border-color: $color-background;
      color: $color-background-dark;
    }

    &--ghost {
      background-color: transparent;
      border-color: $color-background-dark;
      color: $color-background-dark;

      &:hover,
      &:focus {
        background-color: transparent;
        border-color: $color-background;
        color: $color-background;
      }
    }

    &--link {
      background-color: transparent;

      &::before {
        background-color: $color-background;
      }

      &:hover,
      &:focus {
        background-color: transparent;
        color: $color-background-dark;

        &::before {
          background-color: $color-background-dark;
        }
      }

      &::after {
        $color-background-dark-rgb: red($color-background-dark), green($color-background-dark), blue($color-background-dark);
        $color-background-rgb: red($color-background), green($color-background), blue($color-background);

        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='16' height='10' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M3.586 5L.293 8.293a1 1 0 1 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4A1 1 0 1 0 .293 1.707L3.586 5z' fill='rgb(#{$color-background-rgb})'/%3E%3Cpath d='M13.586 5l-3.293 3.293a1 1 0 0 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4a1 1 0 0 0-1.414 1.414L13.586 5z' fill='rgb(#{$color-background-dark-rgb})'/%3E%3C/svg%3E");
      }
    }
  }

  .pill {
    &:hover,
    &:focus {
      color: $green;
    }
  }
}

.themeReset {
  background-color: $color-background;
  color: $color-text;

  #{$heading-selectors} {
    color: $color-headline;

    a,
    a:hover,
    a:focus {
      color: $color-headline;
      text-decoration: none;
    }
  }

  a,
  .feather {
    color: $color-accent;
  }

  a:hover,
  a:focus {
    color: darken($color-accent, 10%);
  }

  .button {
    background-color: $green;
    border-color: $green;
    color: $black;

    &:hover,
    &:focus {
      background-color: $color-background-dark;
      border-color: $green;
      color: $green;
    }

    &--ghost {
      background-color: transparent;
      border-color: $color-accent;
      color: $color-accent;

      &:hover,
      &:focus {
        background-color: transparent;
        border-color: $color-background-dark;
        color: $color-background-dark;
      }
    }

    &--link {
      background-color: transparent;
      color: $color-accent;

      &:hover,
      &:focus {
        background-color: transparent;
        color: $color-background-dark;

        &::before {
          background-color: $color-background-dark;
        }
      }

      &::before {
        background-color: $color-accent;
      }

      &::after {
        $color-accent-rgb: red($color-accent), green($color-accent), blue($color-accent);
        $color-background-dark-rgb: red($color-background-dark), green($color-background-dark), blue($color-background-dark);

        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='16' height='10' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M3.586 5L.293 8.293a1 1 0 1 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4A1 1 0 1 0 .293 1.707L3.586 5z' fill='rgb(#{$color-accent-rgb})'/%3E%3Cpath d='M13.586 5l-3.293 3.293a1 1 0 0 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4a1 1 0 0 0-1.414 1.414L13.586 5z' fill='rgb(#{$color-background-dark-rgb})'/%3E%3C/svg%3E");
      }
    }
  }
}
